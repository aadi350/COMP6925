using Convex, SCS

m = Model(Ipopt.Optimizer)

x = Variable(1,2)

linear_constraints = [x[1] >= 0, x[2] >= 0, x[1] <= 4]
nlinear_constraints = [9square(x[1]) + 5square(x[2]) <= 216]
constraints = vcat(linear_constraints, nlinear_constraints)

objective = 3x[1] + 5x[2]

# @NLconstraint(m, 9x1^2 + 5x2^2 <= 216)
problem = maximize(objective, constraints)

# Solve the problem by calling solve!
solve!(problem, SCS.Optimizer())

# Check the status of the problem
println("Status: ", problem.status) # :Optimal, :Infeasible, :Unbounded etc.

# Get the optimal value
println("Optimal value: ", problem.optval)
